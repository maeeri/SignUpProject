@model SignUpProject.Models.ViewModel

@inject IViewLocalizer Localizer
@inject IOptions<RequestLocalizationOptions> LocOptions

@{
    ViewData["Title"] = Localizer["index"];
}

<div class="container contents">
    <h1>@Localizer["index"]</h1>
    @if ((await AuthorizationService.AuthorizeAsync(User, "AdminRole")).Succeeded)
    {
        <div class="row">
            <a asp-action="Create">
                <span title="@Localizer["add"]" class="material-symbols-outlined">
                    add
                </span>
            </a>
        </div>
    }

    <table class="table">
        <thead>
        <tr>
            <th>
                    @Localizer["name"]
            </th>
            <th>
                    @Localizer["location"]
            </th>
            <th>
                @Localizer["capacity"]
            </th>
            <th>
                @Localizer["signups"]
            </th>
            <th>
                @Localizer["staff"]
            </th>
            <th>
                    @Localizer["start"]
            </th>
            <th>
                    @Localizer["end"]
            </th>
                @if ((await AuthorizationService.AuthorizeAsync(User, "AdminRole")).Succeeded)
                {
                    <th></th>
                }

        </tr>
        </thead>
        <tbody>
        @foreach (var item in Model.Camps) {
            <tr>
                <td>
                    <a asp-controller="Camps" asp-action="Details" asp-route-id="@item.Id">
                        @Html.DisplayFor(modelItem => item.Name)
                    </a>
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Location)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Capacity)
                </td>
                <td>
                        @{
                            var i = 0;
                            foreach (var campPeople in Model.AllCampPeople)
                            {
                                if (campPeople.Camp == item.Id)
                                    i++;
                            }
                            @i
                        }
                </td>
                <td>
                    @{
                        var j = 0;
                        foreach (var staff in Model.CompleteStaff)
                        {
                            if (staff.Camp == item.Id)
                                j++;
                        }
                        @j
                    }
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Start)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.End)
                </td>
                @if ((await AuthorizationService.AuthorizeAsync(User, "AdminRole")).Succeeded)
                {
                    <td>
                        <a asp-action="Edit" asp-route-id="@item.Id">
                                <span title="@Localizer["edit"]" class="material-symbols-outlined">
                                    edit
                            </span>
                        </a>
                        <a asp-action="Delete" asp-route-id="@item.Id">
                                <span title="@Localizer["delete"] @item.Name" class="material-symbols-outlined">
                                delete
                            </span>
                        </a>
                    </td>
                }

            </tr>
        }

        </tbody>
    </table>
</div>
