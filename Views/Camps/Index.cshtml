@model SignUpProject.Models.ViewModel

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Camp.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Camp.Location)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Camp.Capacity)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Camp.Start)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Camp.End)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.Camps) {
        <tr>
            <td>
                    @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                    @Html.DisplayFor(modelItem => item.Location)
            </td>
            <td>
                    @Html.DisplayFor(modelItem => item.Capacity)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Start)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.End)
            </td>
            @if ((await AuthorizationService.AuthorizeAsync(User, "AdminRole")).Succeeded)
            {
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                </td>
            }
            else
            {
                <td>
                    <a asp-action="Details" asp-route-id="@item.Id">Details</a>
                </td>
            }
            
        </tr>
}
    </tbody>
</table>
